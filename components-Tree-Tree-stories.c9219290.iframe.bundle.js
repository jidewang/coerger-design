"use strict";(self.webpackChunkcoerger_design=self.webpackChunkcoerger_design||[]).push([[681],{"./src/components/Tree/Tree.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{TreeExample:()=>TreeExample,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Tree_stories});var react=__webpack_require__("./node_modules/react/index.js"),classnames=__webpack_require__("./node_modules/classnames/index.js"),classnames_default=__webpack_require__.n(classnames),Icon=__webpack_require__("./src/components/Icon/Icon.tsx");const components_Icon=Icon.A;Icon.A.__docgenInfo={description:"",methods:[],displayName:"Icon",props:{theme:{required:!1,tsType:{name:"union",raw:'| "primary"\r\n| "secondary"\r\n| "success"\r\n| "info"\r\n| "warning"\r\n| "light"\r\n| "danger"',elements:[{name:"literal",value:'"primary"'},{name:"literal",value:'"secondary"'},{name:"literal",value:'"success"'},{name:"literal",value:'"info"'},{name:"literal",value:'"warning"'},{name:"literal",value:'"light"'},{name:"literal",value:'"danger"'}]},description:""}},composes:["FontAwesomeIconProps"]};var free_solid_svg_icons=__webpack_require__("./node_modules/@fortawesome/free-solid-svg-icons/index.mjs"),free_regular_svg_icons=__webpack_require__("./node_modules/@fortawesome/free-regular-svg-icons/index.mjs"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const TreeNode=props=>{let{data:{name,children,key,collapsed,checked,type,icon,loading},onCollapse,onCheck,requestData,checkable,onselect,selectedKey,setSelectedKey}=props,caret=null;children&&children.length>0?caret=collapsed?(0,jsx_runtime.jsx)(components_Icon,{icon:free_solid_svg_icons.CHJ,onClick:()=>onCollapse(key),theme:"primary",className:"icon"}):(0,jsx_runtime.jsx)(components_Icon,{icon:free_regular_svg_icons.xbI,onClick:()=>onCollapse(key),className:"icon"}):requestData&&(loading?caret=(0,jsx_runtime.jsx)(components_Icon,{icon:free_solid_svg_icons.z1G,onClick:()=>onCollapse(key),className:"icon loadingIcon"}):"folder"==type&&(caret=(0,jsx_runtime.jsx)(components_Icon,{icon:free_solid_svg_icons.CHJ,onClick:()=>onCollapse(key),theme:"primary",className:"icon"})));const handleClick=key=>{setSelectedKey&&setSelectedKey((()=>key)),onselect&&onselect(key)},contentClassName=classnames_default()("content",{"content-click":selectedKey==key});return(0,jsx_runtime.jsxs)("div",{className:"tree-node",children:[(0,jsx_runtime.jsx)("div",{className:"inner",children:(0,jsx_runtime.jsxs)("div",{className:contentClassName,onClick:()=>handleClick(key),children:[(0,jsx_runtime.jsxs)("div",{className:"content-iconBox",children:[caret,checkable&&(0,jsx_runtime.jsx)("input",{type:"checkBox",checked,className:"checkBoxInput",onChange:()=>onCheck(key,!checked)}),"folder"===type?(0,jsx_runtime.jsx)(components_Icon,{icon:icon||free_regular_svg_icons.ao0,className:"icon"}):(0,jsx_runtime.jsx)(components_Icon,{icon:icon||free_regular_svg_icons.h8M,className:"icon"})]}),name]})}),children&&children.length>0&&!collapsed&&(0,jsx_runtime.jsx)("div",{className:"children",children:children.map((item=>(0,jsx_runtime.jsx)(TreeNode,{data:item,onCollapse,onCheck,checkable,requestData,onselect:handleClick,selectedKey},item.key)))})]})},Tree_TreeNode=TreeNode;TreeNode.__docgenInfo={description:"",methods:[],displayName:"TreeNode",props:{data:{required:!0,tsType:{name:"TreeData"},description:""},checkable:{required:!1,tsType:{name:"boolean"},description:""},onCollapse:{required:!0,tsType:{name:"signature",type:"function",raw:"(key: string) => void",signature:{arguments:[{type:{name:"string"},name:"key"}],return:{name:"void"}}},description:""},onselect:{required:!1,tsType:{name:"signature",type:"function",raw:"(key: string) => void",signature:{arguments:[{type:{name:"string"},name:"key"}],return:{name:"void"}}},description:""},onCheck:{required:!0,tsType:{name:"signature",type:"function",raw:"(key: string, checked: boolean) => void",signature:{arguments:[{type:{name:"string"},name:"key"},{type:{name:"boolean"},name:"checked"}],return:{name:"void"}}},description:""},requestData:{required:!1,tsType:{name:"signature",type:"function",raw:"(key: string) => Promise<TreeData[]>",signature:{arguments:[{type:{name:"string"},name:"key"}],return:{name:"Promise",elements:[{name:"Array",elements:[{name:"TreeData"}],raw:"TreeData[]"}],raw:"Promise<TreeData[]>"}}},description:""},selectedKey:{required:!1,tsType:{name:"string"},description:""},setSelectedKey:{required:!1,tsType:{name:"ReactDispatch",raw:"React.Dispatch<React.SetStateAction<string | undefined>>",elements:[{name:"ReactSetStateAction",raw:"React.SetStateAction<string | undefined>",elements:[{name:"union",raw:"string | undefined",elements:[{name:"string"},{name:"undefined"}]}]}]},description:""}}};const Tree=props=>{const{data,checkable,requestData,onselect,selectKey}=props,[keyNodeMap,setKeyNodeMap]=(0,react.useState)({}),treeRef=(0,react.useRef)(null);(0,react.useEffect)((()=>{buildKeyMap()}),[]);const[selectedKey,setSelectedKey]=(0,react.useState)(selectKey);let nodeMap={};const buildKeyMap=()=>{nodeMap[data.key]=data,data.children&&data.children.length>0&&walk(data.children,data),setKeyNodeMap((()=>nodeMap))},walk=(children,parent)=>{children.forEach((item=>{item.parent=parent,nodeMap[item.key]=item,item.children&&item.children.length>0&&walk(item.children,item)}))},checkChildren=function(){let checked=arguments.length>1?arguments[1]:void 0;(arguments.length>0&&void 0!==arguments[0]?arguments[0]:[]).forEach((item=>{item.checked=checked,item.children&&item.children.length>0&&checkChildren(item.children,checked)}))},checkParent=parent=>{for(;parent;)parent.checked=parent.children&&parent.children.every((item=>item.checked)),parent=parent.parent};return(0,jsx_runtime.jsx)("div",{className:"coerger-tree",ref:treeRef,children:(0,jsx_runtime.jsx)("div",{className:"tree-nodes",children:(0,jsx_runtime.jsx)(Tree_TreeNode,{data,onCollapse:async key=>{let data=keyNodeMap[key];if(data){let{children}=data;children?(data.collapsed=!data.collapsed,setKeyNodeMap((()=>({...keyNodeMap})))):requestData&&(data.loading=!0,setKeyNodeMap((()=>({...keyNodeMap,data}))),console.log("await requestData(key)",await requestData(key)),setTimeout((()=>{data.children=[{name:data.name+"son1",key:"".concat(data.key,"-1"),type:"folder",collapsed:!0},{name:data.name+"son2",key:"".concat(data.key,"-2"),type:"file",collapsed:!0}],data.loading=!1,data.collapsed=!1,buildKeyMap()}),2e3))}},onCheck:(key,checked)=>{let data=keyNodeMap[key];data&&(data.checked=checked,data.checked?(checkChildren(data.children,!0),checkParent(data.parent)):(checkChildren(data.children,!1),checkParent(data.parent)),setKeyNodeMap((()=>({...keyNodeMap,data}))))},checkable,requestData,onselect,selectedKey,setSelectedKey})})})},Tree_Tree=Tree;Tree.__docgenInfo={description:"",methods:[],displayName:"Tree",props:{data:{required:!0,tsType:{name:"TreeData"},description:""},checkable:{required:!1,tsType:{name:"boolean"},description:""},requestData:{required:!1,tsType:{name:"signature",type:"function",raw:"(key: string) => Promise<TreeData[]>",signature:{arguments:[{type:{name:"string"},name:"key"}],return:{name:"Promise",elements:[{name:"Array",elements:[{name:"TreeData"}],raw:"TreeData[]"}],raw:"Promise<TreeData[]>"}}},description:""},onselect:{required:!1,tsType:{name:"signature",type:"function",raw:"(key: string) => void",signature:{arguments:[{type:{name:"string"},name:"key"}],return:{name:"void"}}},description:""},selectKey:{required:!1,tsType:{name:"string"},description:""}}},__webpack_require__("./node_modules/@fortawesome/fontawesome-svg-core/index.mjs").Yv.add(free_solid_svg_icons.X7I,free_regular_svg_icons.C91);const Tree_stories={title:"components/Tree",component:Tree_Tree,parameters:{layout:"centered"},tags:["autodocs"],argTypes:{},args:{}},TreeExample={render:()=>{const data={name:"父亲",key:"1",type:"folder",collapsed:!1,icon:free_solid_svg_icons.euM,children:[{name:"儿子1",key:"1-1",type:"folder",collapsed:!1,children:[{name:"孙子1",key:"1-1-1",type:"folder",collapsed:!1,children:[{name:"重孙1",key:"1-1-1-1",type:"file",collapsed:!1}]}]},{name:"儿子2",key:"1-2",type:"folder",collapsed:!0}]};return(0,jsx_runtime.jsx)("div",{style:{minWidth:"500px"},children:(0,jsx_runtime.jsx)(Tree_Tree,{data,requestData:async key=>new Promise((resolve=>{setTimeout((()=>{resolve([{name:data.name+"son1",key:"".concat(data.key,"-1"),type:"folder",collapsed:!0},{name:data.name+"son2",key:"".concat(data.key,"-2"),type:"folder",collapsed:!0}])}),1e3)})),onselect:key=>{console.log(key)},selectKey:"1-1-1",checkable:!0})})}};TreeExample.parameters={...TreeExample.parameters,docs:{...TreeExample.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    const data = {\n      name: "父亲",\n      key: "1",\n      type: "folder",\n      collapsed: false,\n      icon: faCoffee,\n      children: [{\n        name: "儿子1",\n        key: "1-1",\n        type: "folder",\n        collapsed: false,\n        children: [{\n          name: "孙子1",\n          key: "1-1-1",\n          type: "folder",\n          collapsed: false,\n          children: [{\n            name: "重孙1",\n            key: "1-1-1-1",\n            type: "file",\n            collapsed: false\n          }]\n        }]\n      }, {\n        name: "儿子2",\n        key: "1-2",\n        type: "folder",\n        collapsed: true\n      }]\n    };\n    const requestData = async (key: string) => {\n      return new Promise<TreeData[]>(resolve => {\n        setTimeout(() => {\n          resolve(([{\n            name: data.name + "son1",\n            key: `${data.key}-1`,\n            type: "folder",\n            collapsed: true\n          }, {\n            name: data.name + "son2",\n            key: `${data.key}-2`,\n            type: "folder",\n            collapsed: true\n          }] as TreeData[]));\n        }, 1000);\n      });\n    };\n    const select = (key: string) => {\n      console.log(key);\n    };\n    return <div style={{\n      minWidth: "500px"\n    }}>\r\n        <Tree data={data} requestData={requestData} onselect={select} selectKey="1-1-1" checkable></Tree>\r\n      </div>;\n  }\n}',...TreeExample.parameters?.docs?.source}}};const __namedExportsOrder=["TreeExample"]},"./src/components/Icon/Icon.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__,I:()=>Icon});__webpack_require__("./node_modules/react/index.js");var classnames__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/classnames/index.js"),classnames__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_1__),_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@fortawesome/react-fontawesome/index.es.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/react/jsx-runtime.js");const Icon=props=>{const{className,theme,...restProps}=props,classes=classnames__WEBPACK_IMPORTED_MODULE_1___default()("coerger-icon",className,{["icon-".concat(theme)]:theme});return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_2__.g,{className:classes,...restProps})},__WEBPACK_DEFAULT_EXPORT__=Icon;Icon.__docgenInfo={description:"",methods:[],displayName:"Icon",props:{theme:{required:!1,tsType:{name:"union",raw:'| "primary"\r\n| "secondary"\r\n| "success"\r\n| "info"\r\n| "warning"\r\n| "light"\r\n| "danger"',elements:[{name:"literal",value:'"primary"'},{name:"literal",value:'"secondary"'},{name:"literal",value:'"success"'},{name:"literal",value:'"info"'},{name:"literal",value:'"warning"'},{name:"literal",value:'"light"'},{name:"literal",value:'"danger"'}]},description:""}},composes:["FontAwesomeIconProps"]}}}]);