"use strict";(self.webpackChunkcoerger_design=self.webpackChunkcoerger_design||[]).push([[959],{"./src/components/VirtualScrollList/VirtualScrollList.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{DefaultVirtualScrollList:()=>DefaultVirtualScrollList,__namedExportsOrder:()=>__namedExportsOrder,default:()=>VirtualScrollList_stories});__webpack_require__("./src/styles/index.scss");var react=__webpack_require__("./node_modules/react/index.js");function initVirtual(param,update){const range={start:0,end:0,padFront:0,padBehind:0};function updateRange(start,end){range.start=start,range.end=end,range.padFront=function getPadFront(){return param.estimateSize*range.start}(),range.padBehind=function getPadBehind(){const lastIndex=param.uniqueIds.length-1;return param.estimateSize*(lastIndex-range.end)}();let a={...range};update((()=>a))}function checkRange(start,end){const total=param.uniqueIds.length,size=param.size;total<size?(start=0,end=total-1):end-start<size-1&&(start=end-size+1),updateRange(start,end)}checkRange(0,param.size-1);let offsetValue=0;function getScrollOvers(){return Math.floor(offsetValue/param.estimateSize)}function getEndByStart(start){const computeEnd=start+param.size-1;return Math.min(computeEnd,param.uniqueIds.length-1)}return{handleScroll:function handleScroll(offset){const direction=offset<offsetValue?"FRONT":"BEHIND";offsetValue=offset,"FRONT"===direction?function handleFront(){const overs=getScrollOvers();if(overs>range.start)return;const start=Math.max(overs-param.buffer,0);checkRange(start,getEndByStart(start))}():"BEHIND"===direction&&function handleBehind(){const overs=getScrollOvers();overs<range.start+param.buffer||checkRange(overs,getEndByStart(overs))}()}}}var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const VirtualScrollList=props=>{const{dataSources,size,DataComponent,dataKey,estimateSize}=props,[range,setRange]=(0,react.useState)({}),[paddingStyle,setPaddingStyle]=(0,react.useState)({}),vir=(0,react.useRef)();(0,react.useEffect)((()=>{vir.current=initVirtual({size,buffer:Math.round(size/3),uniqueIds:dataSources.map((item=>dataSources[dataKey])),estimateSize},setRange)}),[]),(0,react.useEffect)((()=>{const{padFront,padBehind}=range;setPaddingStyle((()=>({padding:"".concat(padFront,"px 0 ").concat(padBehind,"px 0")})))}),[range]);const root=(0,react.useRef)(null);return(0,jsx_runtime.jsx)("div",{onScroll:e=>{if(root.current){const offset=root.current.scrollTop;vir.current.handleScroll(offset)}},className:"coerger-",ref:root,style:{width:"100%",height:"300px",overflow:"scroll",border:"1px solid red"},children:(0,jsx_runtime.jsx)("div",{style:paddingStyle,children:(()=>{const component=[],{start,end}=range;for(let index=start;index<=end;index++){const dataSource=dataSources[index],uniqueKey=dataSource[dataKey];dataSource&&component.push((0,jsx_runtime.jsx)(DataComponent,{source:dataSource,estimateSize},uniqueKey))}return component})()})})},VirtualScrollList_VirtualScrollList=VirtualScrollList;VirtualScrollList.__docgenInfo={description:"",methods:[],displayName:"VirtualScrollList",props:{dataSources:{required:!0,tsType:{name:"Array",elements:[{name:"any"}],raw:"any[]"},description:""},size:{required:!0,tsType:{name:"number"},description:""},DataComponent:{required:!0,tsType:{name:"ReactFC",raw:"React.FC<any>",elements:[{name:"any"}]},description:""},dataKey:{required:!0,tsType:{name:"string"},description:""},estimateSize:{required:!0,tsType:{name:"number"},description:""}}};var mock=__webpack_require__("./node_modules/mockjs/dist/mock.js");const Item=props=>{const{source,estimateSize}=props;return(0,jsx_runtime.jsxs)("div",{className:"item-","data-id":source.index,style:{height:"".concat(estimateSize,"px")},children:[(0,jsx_runtime.jsxs)("div",{className:"head",children:[(0,jsx_runtime.jsx)("span",{children:source.index}),(0,jsx_runtime.jsx)("span",{children:source.name})]}),(0,jsx_runtime.jsx)("div",{className:"body",children:(0,jsx_runtime.jsx)("span",{children:source.desc})})]},source.index)},VirtualScrollList_Item=Item;Item.__docgenInfo={description:"",methods:[],displayName:"Item",props:{source:{required:!0,tsType:{name:"any"},description:""},estimateSize:{required:!0,tsType:{name:"number"},description:""}}};const VirtualScrollList_stories={title:"components/VirtualScrollList",component:VirtualScrollList_VirtualScrollList,parameters:{layout:"centered"},tags:["autodocs"],argTypes:{},args:{}},DefaultVirtualScrollList={args:{size:30,dataSources:[],dataKey:"",estimateSize:100,DataComponent:VirtualScrollList_Item},render:()=>{const data=[];let index=0;for(;1e4!=index++;)data.push({id:index,name:mock.Random.cname(),desc:mock.Random.csentence(20,120),index});return(0,jsx_runtime.jsx)("div",{style:{width:"500px"},children:(0,jsx_runtime.jsx)(VirtualScrollList_VirtualScrollList,{dataSources:data,size:30,dataKey:"id",estimateSize:100,DataComponent:VirtualScrollList_Item})})}};DefaultVirtualScrollList.parameters={...DefaultVirtualScrollList.parameters,docs:{...DefaultVirtualScrollList.parameters?.docs,source:{originalSource:'{\n  args: {\n    size: 30,\n    dataSources: [],\n    dataKey: "",\n    estimateSize: 100,\n    DataComponent: Item\n  },\n  render: () => {\n    const totalCount = 10000;\n    interface DataType {\n      id: number;\n      name: string;\n      desc: string;\n      index: number;\n    }\n    const data: DataType[] = [];\n    let index = 0;\n    while (index++ !== totalCount) {\n      data.push({\n        id: index,\n        name: Random.cname(),\n        desc: Random.csentence(20, 120),\n        index: index\n      });\n    }\n    return <div style={{\n      width: "500px"\n    }}>\r\n        <VirtualScrollList dataSources={data} size={30} dataKey="id" estimateSize={100} DataComponent={Item}></VirtualScrollList>\r\n      </div>;\n  }\n}',...DefaultVirtualScrollList.parameters?.docs?.source}}};const __namedExportsOrder=["DefaultVirtualScrollList"]},"./src/styles/index.scss":()=>{}}]);